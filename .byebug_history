c
redirect_to categories_path
@categories.update(category_params)
c
 redirect_to categories_path
@categories.update(category_params)
c
redirect_to categories_path
@categories.update(category_params)
expect(response.status).to eq(200)
c
expect(response.status).to eq(200)
c
redirect_to categories_path
@categories.update(category_params)
c
redirect_to categories_path
@categories.update(category_params)
c
 render :edit, status: :unprocessable_entity
c
render :edit
@categories.update(category_params)
c
post :create,params: category_params
c
redirect_to categories_path
@categories.update(category_params)
c
@categories.update(category_params)
c
 put :update,params: category_params
c
put :update,params: category_params
c
put :update,params: category_params
c
patch :update,params: category_params
c
post :update,params: category_params
c
@categories=Category.all
c
@categories=Category.all
c
@categories=Category.all
c
expect(response).to render_template(:new)
c
get :index
team = Category.create(name:"toys")
c
 team = Category.create
c
render "new"
render :new
redirect_to :new
render :new
render :new, status: :unprocessable_entity
c
post :create,params: category_params
category_params= { category: {name:nil} }
   37:             category_params= { category: {name:nil} }
c
render :new
@categories.save
c
redirect_to categories_path
@categories.save
@categories
if @categories.save
@categories = Category.new(category_params)
c
 post :create,params: category_params
c
response.status
response
c
@categories.save
@categories = Category.new(category_params)
c
redirect_to categories_path
@categories.save
@categories = Category.new(category_params)
Category
category_params
c
post :create,params: category_params
category_params
category
c
post :create,params: category_params
c
category1
category
post :create,params: category_params
c
post :create,params: category_params
c
category1
c
Category.find(1)
category1
c
Category.last
Category.all
category
category1
c
category1
c
category1
c
Category.last
Category.all
c
category
category1
c
category1
c
category
c
category
c
category
Category.all
c
Category.all
category.all
c
Category.all
c
params.require(:category)
c
params.permit(:name,:parent_id)
params.require(:category)
params.require(:category).permit(:name,:parent_id)
params
c
params
c
current_user.id
c
current_user.id
c
current_user
user
User
sign_in(user)
category
c
params.require(:product).permit(:name,:price,:description,:category_id,:avatar)
c
C
c
a=params.require(:product).permit(:name,:price,:description,:category_id,:avatar)
params.permitted?
params
params.require(:product).permit(:name,:price,:description,:category_id,:avatar).valid?
c
params
c
params.value?
params.valid?
c
params.permitted?
params.value?
params.valid?
params.valod
params
c
Params
Params.valid?
c
params.permitted?
params
c
params.permit!
params.permit?
params.name
params[1].product
params.product
params
params.avatar.present?
params.avatar.present
params.avatar
params
c
Params
Params.avatar.valid?
Params.avatar.present?
Params.avatar
params.permitted?
params.permit!
params.permitted?
params.permited
params
c
Category.sub_category(category.id)
category.id
c
Category.sub_category(category.id).present?
Category.sub_category(category.id).present
Category.sub_category(category.id)
c
clear
Category.all.parent_id.nil?
Category.where.parent_id.nil?
Category.where(parent_id.nil?)
category.parent_id.nil?
Category.parent_id.nil?
category.id
category
c
@categories
c
Category.parent_id.nil?
Category.all
categories
c
categories
@categories
c
Category
params
c
params
c
category
c
params
category_params
c
category_params
params
c
params
category_params
c
params
category_params
Category.new(category_params)
c
current_user\
current_user
user
c
user.save!
user.valid
user
c
user.save!
user.save
user
c
