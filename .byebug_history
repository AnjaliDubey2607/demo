c
clear
Category.all.parent_id.nil?
Category.where.parent_id.nil?
Category.where(parent_id.nil?)
category.parent_id.nil?
Category.parent_id.nil?
category.id
category
c
@categories
c
Category.parent_id.nil?
Category.all
categories
c
categories
@categories
c
Category
params
c
params
c
category
c
params
category_params
c
category_params
params
c
params
category_params
c
params
category_params
Category.new(category_params)
c
current_user\
current_user
user
c
user.save!
user.valid
user
c
user.save!
user.save
user
c
user
User.from_google(data)
c
user=User.from_google(data)
c
expect(user.name).to eq("anjali")
c
user.name
c
@category.parent_id
@category
c
@category.parent_id.nil?
c
@category.parent_id.nil?
@category.parent_id.nil
c
@category.parent_id.present?
c
@category.parent_id.present?
@category
category
c
Category.category_name
c
Category.category_name.pluck(:parent_id)
Category.category_name
Category.category.select(:parent_id).pluck(:parent_id)
Category.category.select(:parent_id)
Category.category
Category.category.pluck["parent_id"].to_a
Category.category.pluck["parent_id"].to_i
Category.category.pluck["parent_id"]
Category.category.pluck[:parent_id]
Category.category
c
expect(Category.all.pluck(:parent_id)).to include(nil)
Category.all.pluck(:parent_id)
Category.all
c
category.parent_id
category=Category.all
c.parent_id
c=allow(Category.category)
allow(Category.category)
c.parent_id
c=Category.find_by(parent_id:nil)
c=Category.where(parent_id:nil)
category
category.parent_id
c
